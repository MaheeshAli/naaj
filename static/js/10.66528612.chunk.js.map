{"version":3,"sources":["@core/components/sidebar/index.js","views/apps/user/list/Sidebar.js","views/apps/user/list/columns.js","views/apps/user/list/Table.js","@core/components/widgets/stats/StatsHorizontal.js","views/apps/user/list/index.js"],"names":["Sidebar","props","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","onClick","isOpen","toggle","classnames","modalClassName","undefined","style","String","close","tag","options","wheelPropagation","defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","SidebarNewUsers","useState","data","setData","plan","setPlan","role","setRole","dispatch","useDispatch","useForm","control","setValue","setError","handleSubmit","errors","formState","onClosed","key","onSubmit","Object","values","every","field","length","checkIsValid","addUser","avatar","status","currentPlan","billing","type","for","name","render","id","placeholder","invalid","color","isClearable","classNamePrefix","theme","selectThemeColors","onChange","e","target","outline","renderClient","row","img","height","initials","avatarColor","content","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","cell","to","store","getUser","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","renderRole","pill","Link","href","preventDefault","deleteUser","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","xl","htmlFor","caret","UsersList","useSelector","state","users","console","log","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","setCurrentPlan","number","currentStatus","setCurrentStatus","useEffect","getAllData","getData","q","page","perPage","md","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","allData","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","StatsHorizontal","stats","renderStats","statTitle","statsMargin","lg","sm","Table"],"mappings":"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","file":"static/js/10.66528612.chunk.js","sourcesContent":["// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** React Import\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\n\n// ** Store & Actions\nimport { addUser } from '../store/index'\nimport { useDispatch } from 'react-redux'\n\nconst defaultValues = {\n  email: '',\n  contact: '',\n  company: '',\n  fullName: '',\n  username: '',\n  country: null\n}\n\nconst countryOptions = [\n  { label: 'Australia', value: 'Australia' },\n  { label: 'Bangladesh', value: 'Bangladesh' },\n  { label: 'Belarus', value: 'Belarus' },\n  { label: 'Brazil', value: 'Brazil' },\n  { label: 'Canada', value: 'Canada' },\n  { label: 'China', value: 'China' },\n  { label: 'France', value: 'France' },\n  { label: 'Germany', value: 'Germany' },\n  { label: 'India', value: 'India' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Israel', value: 'Israel' },\n  { label: 'Italy', value: 'Italy' },\n  { label: 'Japan', value: 'Japan' },\n  { label: 'Korea', value: 'Korea' },\n  { label: 'Mexico', value: 'Mexico' },\n  { label: 'Philippines', value: 'Philippines' },\n  { label: 'Russia', value: 'Russia' },\n  { label: 'South', value: 'South' },\n  { label: 'Thailand', value: 'Thailand' },\n  { label: 'Turkey', value: 'Turkey' },\n  { label: 'Ukraine', value: 'Ukraine' },\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\n  { label: 'United Kingdom', value: 'United Kingdom' },\n  { label: 'United States', value: 'United States' }\n]\n\nconst checkIsValid = data => {\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** States\n  const [data, setData] = useState(null)\n  const [plan, setPlan] = useState('basic')\n  const [role, setRole] = useState('subscriber')\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = data => {\n    setData(data)\n    if (checkIsValid(data)) {\n      toggleSidebar()\n      dispatch(\n        addUser({\n          role,\n          avatar: '',\n          status: 'active',\n          email: data.email,\n          currentPlan: plan,\n          billing: 'auto debit',\n          company: data.company,\n          contact: data.contact,\n          fullName: data.fullName,\n          username: data.username,\n          country: data.country.value\n        })\n      )\n    } else {\n      for (const key in data) {\n        if (data[key] === null) {\n          setError('country', {\n            type: 'manual'\n          })\n        }\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, '')\n    }\n    setRole('subscriber')\n    setPlan('basic')\n  }\n\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='New User'\n      headerClassName='mb-1'\n      contentClassName='pt-0'\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className='mb-1'>\n          <Label className='form-label' for='fullName'>\n            Full Name <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='fullName'\n            control={control}\n            render={({ field }) => (\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='username'>\n            Username <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='username'\n            control={control}\n            render={({ field }) => (\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='userEmail'>\n            Email <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='email'\n            control={control}\n            render={({ field }) => (\n              <Input\n                type='email'\n                id='userEmail'\n                placeholder='john.doe@example.com'\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        </div>\n\n        <div className='mb-1'>\n          <Label className='form-label' for='contact'>\n            Contact <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='contact'\n            control={control}\n            render={({ field }) => (\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='company'>\n            Company <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='company'\n            control={control}\n            render={({ field }) => (\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country'>\n            Country <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='country'\n            control={control}\n            render={({ field }) => (\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n              <Select\n                isClearable={false}\n                classNamePrefix='select'\n                options={countryOptions}\n                theme={selectThemeColors}\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n                {...field}\n              />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='user-role'>\n            User Role\n          </Label>\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n            <option value='subscriber'>Subscriber</option>\n            <option value='editor'>Editor</option>\n            <option value='maintainer'>Maintainer</option>\n            <option value='author'>Author</option>\n            <option value='admin'>Admin</option>\n          </Input>\n        </div>\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n          <Label className='form-label' for='select-plan'>\n            Select Plan\n          </Label>\n          <Input type='select' id='select-plan' name='select-plan'>\n            <option value='basic'>Basic</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='company'>Company</option>\n            <option value='team'>Team</option>\n          </Input>\n        </div>\n        <Button type='submit' className='me-1' color='primary'>\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n          Cancel\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getUser, deleteUser } from '../store/index'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'User',\n    sortable: true,\n    minWidth: '300px',\n    sortField: 'fullName',\n    selector: row => row.fullName,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/apps/user/view/${row.id}`}\n            className='user_name text-truncate text-body'\n            onClick={() => store.dispatch(getUser(row.id))}\n          >\n            <span className='fw-bolder'>{row.fullName}</span>\n          </Link>\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Role',\n    sortable: true,\n    minWidth: '172px',\n    sortField: 'role',\n    selector: row => row.role,\n    cell: row => renderRole(row)\n  },\n  {\n    name: 'Plan',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'currentPlan',\n    selector: row => row.currentPlan,\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n  },\n  {\n    name: 'Billing',\n    minWidth: '230px',\n    sortable: true,\n    sortField: 'billing',\n    selector: row => row.billing,\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\n  },\n  {\n    name: 'Status',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'status',\n    selector: row => row.status,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: 'Actions',\n    minWidth: '100px',\n    cell: row => (\n      <div className='column-action'>\n        <UncontrolledDropdown>\n          <DropdownToggle tag='div' className='btn btn-sm'>\n            <MoreVertical size={14} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem\n              tag={Link}\n              className='w-100'\n              to={`/apps/user/view/${row.id}`}\n              onClick={() => store.dispatch(getUser(row.id))}\n            >\n              <FileText size={14} className='me-50' />\n              <span className='align-middle'>Details</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Archive size={14} className='me-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteUser(row.id))\n              }}\n            >\n              <Trash2 size={14} className='me-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\nimport Sidebar from './Sidebar'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getData } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Header\nconst CustomHeader = ({ store, toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(store.data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            <UncontrolledDropdown className='me-1'>\n              <DropdownToggle color='secondary' caret outline>\n                <Share className='font-small-4 me-50' />\n                <span className='align-middle'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem className='w-100'>\n                  <Printer className='font-small-4 me-50' />\n                  <span className='align-middle'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\n                  <FileText className='font-small-4 me-50' />\n                  <span className='align-middle'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid className='font-small-4 me-50' />\n                  <span className='align-middle'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File className='font-small-4 me-50' />\n                  <span className='align-middle'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy className='font-small-4 me-50' />\n                  <span className='align-middle'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n              Add New User\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n  console.log(store)\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        currentPlan: currentPlan.value\n      })\n    )\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\n\n  // ** User filter options\n  const roleOptions = [\n    { value: '', label: 'Select Role' },\n    { value: 'admin', label: 'Admin' },\n    { value: 'author', label: 'Author' },\n    { value: 'editor', label: 'Editor' },\n    { value: 'maintainer', label: 'Maintainer' },\n    { value: 'subscriber', label: 'Subscriber' }\n  ]\n\n  const planOptions = [\n    { value: '', label: 'Select Plan' },\n    { value: 'basic', label: 'Basic' },\n    { value: 'company', label: 'Company' },\n    { value: 'enterprise', label: 'Enterprise' },\n    { value: 'team', label: 'Team' }\n  ]\n\n  const statusOptions = [\n    { value: '', label: 'Select Status', number: 0 },\n    { value: 'pending', label: 'Pending', number: 1 },\n    { value: 'active', label: 'Active', number: 2 },\n    { value: 'inactive', label: 'Inactive', number: 3 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value,\n        currentPlan: currentPlan.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: currentPage,\n        role: currentRole.value,\n        currentPlan: currentPlan.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        currentPlan: currentPlan.value\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        currentPlan: currentPlan.value\n      })\n    )\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Filters</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Label for='role-select'>Role</Label>\n              <Select\n                isClearable={false}\n                value={currentRole}\n                options={roleOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                onChange={data => {\n                  setCurrentRole(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      role: data.value,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      status: currentStatus.value,\n                      currentPlan: currentPlan.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col className='my-md-0 my-1' md='4'>\n              <Label for='plan-select'>Plan</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={planOptions}\n                value={currentPlan}\n                onChange={data => {\n                  setCurrentPlan(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: data.value,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col md='4'>\n              <Label for='status-select'>Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      status: data.value,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: currentPlan.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                store={store}\n                searchTerm={searchTerm}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                toggleSidebar={toggleSidebar}\n              />\n            }\n          />\n        </div>\n      </Card>\n\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n"],"sourceRoot":""}